{
    "swagger": "2.0",
    "info": {
        "description": "API for managing users, classes, and assembly-related functionality in the Assembly Visual Learning Platform",
        "title": "Assembly Visual Learning Platform API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:9898",
    "basePath": "/",
    "paths": {
        "/classes": {
            "get": {
                "description": "Retrieve a list of all classes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Classes"
                ],
                "summary": "Get all classes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Class"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new class with the provided details and an optional image",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Classes"
                ],
                "summary": "Create a new class",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Class topic",
                        "name": "topic",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Class description",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum number of players",
                        "name": "max_player",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Whether the class is public",
                        "name": "is_public",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Class image",
                        "name": "img",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Class"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/classes/{id}": {
            "get": {
                "description": "Retrieve a class by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Classes"
                ],
                "summary": "Get a class by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Class"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a class with the provided details and an optional image",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Classes"
                ],
                "summary": "Update a class",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Class topic",
                        "name": "topic",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Class description",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum number of players",
                        "name": "max_player",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "Whether the class is public",
                        "name": "is_public",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Class image",
                        "name": "img",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Class"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a class by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Classes"
                ],
                "summary": "Delete a class",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Class": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "img": {
                    "type": "string"
                },
                "isPublic": {
                    "type": "boolean"
                },
                "max_player": {
                    "type": "integer"
                },
                "owner": {
                    "description": "Relationship",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "owner_id": {
                    "description": "Foreign key",
                    "type": "integer"
                },
                "topic": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "description": "Nullable field",
                    "type": "string"
                },
                "discord": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "github": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "linkedin": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "youtube": {
                    "type": "string"
                }
            }
        }
    }
}